(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{531:function(t,s,e){t.exports=e.p+"assets/img/step1.dfab8ea4.png"},532:function(t,s,e){t.exports=e.p+"assets/img/step2.52a6c0ca.png"},533:function(t,s,e){t.exports=e.p+"assets/img/step3.1b8be2e8.png"},534:function(t,s,e){t.exports=e.p+"assets/img/step4.1c686fcc.png"},535:function(t,s,e){t.exports=e.p+"assets/img/step5.a2d9e3e4.png"},621:function(t,s,e){"use strict";e.r(s);var a=[function(){var t=this,s=t._self._c;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"其他一些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他一些方法"}},[t._v("#")]),t._v(" 其他一些方法")]),t._v(" "),s("p",[t._v("LTween 提供了一些好用的方法:")]),t._v(" "),s("p",[s("strong",[t._v("VirtualCall")]),t._v("- 注册 start/update/complete 事件, 设置时长, 然后这些事件就会执行:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(531),alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("DelayCall")]),t._v('- 延迟一段时间再执行，与引擎自带的 "Delay" 节点作用一样, 不过这个方法是用回调事件的方式. 可能在c++里这个方法会更有用:')]),t._v(" "),s("p",[s("img",{attrs:{src:e(532),alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("DelayFrameCall")]),t._v("- 延迟几帧再执行:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(533),alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("RegisterUpdateEvent | UnregisterUpdateEvent")]),t._v('- 注册 "Update" 事件，此事件会每一帧都执行知道取消注册.')]),t._v(" "),s("p",[s("img",{attrs:{src:e(534),alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("RepeatCall")]),t._v("- 按照给你的时间间隔重复执行多次:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(535),alt:""}})])])}],p=e(0),n=Object(p.a)({},(function(){this._self._c;return this._m(0)}),a,!1,null,null,null);s.default=n.exports}}]);