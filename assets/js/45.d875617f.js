(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{361:function(e,t,n){e.exports=n.p+"assets/img/1.1e25afa3.png"},593:function(e,t,n){"use strict";n.r(t);var a=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"lguilifecyclebehaviour"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lguilifecyclebehaviour"}},[e._v("#")]),e._v(" LGUILifeCycleBehaviour")]),e._v(" "),t("p",[e._v("Since LGUI use a workflow like Unity does, it is recommanded to use LGUILifeCycleBehaviour as base ActorComponent class for most case, espacially in LGUIPrefab.")]),e._v(" "),t("p",[e._v('When create a Blueprint, typein "LGUILifeCycle" then two class showup, one is LGUILifeCycleBehaviour and the other is LGUILifeCycleUIBehaviour:'),t("br"),e._v(" "),t("img",{attrs:{src:n(361),alt:""}}),e._v("\nNormally just use LGUILifeCycleBehaviour class, it can fit in most use case. LGUILifeCycleUIBehaviour contains some function/ event just for UI elements.")]),e._v(" "),t("h2",{attrs:{id:"lgui-lifecycle-behaviour"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lgui-lifecycle-behaviour"}},[e._v("#")]),e._v(" LGUI LifeCycle Behaviour")]),e._v(" "),t("p",[e._v("The life cycle functions of LGUILifeCycleBehaviour are managed uniformly by LGUIManagerActor, and the execution sequence is as follows:"),t("br"),e._v(" "),t("strong",[e._v("Awake -> OnEnable -> Start -> Update -> OnDisable -> OnDestroy")]),t("br"),e._v(" "),t("strong",[e._v("Awake")]),e._v(": LGUILifeCycleBehaviour is executed once when it is loaded into the scene and the IsUIActive of UIItem is true. If LGUILifeCycleBehaviour is created from Prefab, then "),t("strong",[e._v("initialization work needs to be placed in Awake (not BeginPlay)")]),e._v(", because Awake will execute after all prefab deserialization work is completed."),t("br"),e._v(" "),t("strong",[e._v("OnEnable")]),e._v(": Execute when GetIsActiveAndEnable of LGUILifeCycleBehaviour changes from false to true."),t("br"),e._v(" "),t("strong",[e._v("Start")]),e._v(": Execute Start before the first Update is executed."),t("br"),e._v(" "),t("strong",[e._v("Update")]),e._v(": When GetIsActiveAndEnable is true, it will be executed once every frame."),t("br"),e._v(" "),t("strong",[e._v("OnDisable")]),e._v(": Execute when GetIsActiveAndEnable of LGUILifeCycleBehaviour changes from true to false, or execute once before OnDestroy and OnEnable has been executed."),t("br"),e._v(" "),t("strong",[e._v("OnDestroy")]),e._v(": Execute once when LGUILifeCycleBehaviour is destroyed (EndPlay) and Awake has been executed."),t("br"),e._v("\nAwake/Start/OnDestroy can be executed only once in the whole life cycle, and OnEnable/OnDisalbe/Update may be executed multiple times."),t("br"),e._v("\nGetIsActiveAndEnable: Returns true when IsUIActive of UIItem is true and enable of LGUILifeCycleBehaviour is true.")]),e._v(" "),t("p",[e._v("Execute order with the UnrealEngine's built-in life cycle function: BeginPlay -> Awake ... OnDestroy -> EndPlay, the Tick function has nothing to do with the Update function.")]),e._v(" "),t("h3",{attrs:{id:"other-functions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#other-functions"}},[e._v("#")]),e._v(" Other functions")]),e._v(" "),t("p",[t("strong",[e._v("GetRootSceneComponent")]),e._v(": Shotcut and cache for GetOwner->GetRootComponent.")]),e._v(" "),t("h2",{attrs:{id:"lgui-lifecycle-ui-behaviour"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lgui-lifecycle-ui-behaviour"}},[e._v("#")]),e._v(" LGUI LifeCycle UI Behaviour")]),e._v(" "),t("p",[t("strong",[e._v("OnUIActiveInHierarchy")]),e._v(": Called when RootUIComp IsActiveInHierarchy state is changed.\n"),t("strong",[e._v("OnUIDimensionsChanged")]),e._v(": Called when RootUIComp->AnchorData is changed.\n"),t("strong",[e._v("OnUIChildDimensionsChanged")]),e._v(": Called when RootUIComp's attachchildren->AnchorData is changed.\n"),t("strong",[e._v("OnUIChildAcitveInHierarchy")]),e._v(": Called when RootUIComp's attachchildren IsActiveInHierarchy state is changed.\n"),t("strong",[e._v("OnUIAttachmentChanged")]),e._v(": Called when RootUIComp attach to a new parent.\n"),t("strong",[e._v("OnUIChildAttachmentChanged")]),e._v(": Called when RootUIComp's attachchildren is attached to RootUIComp or detached from RootUIComp.\n"),t("strong",[e._v("OnUIInteractionStateChanged")]),e._v(": Called when RootUIComp's interaction state changed (when UICanvasGroup component allow interaction or not).\n"),t("strong",[e._v("OnUIChildHierarchyIndexChanged")]),e._v(": Called when RootUIComp's attachchildren->SetHierarchyIndex() is called, usually used for layout to sort children.")]),e._v(" "),t("h3",{attrs:{id:"other-functions-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#other-functions-2"}},[e._v("#")]),e._v(" Other functions")]),e._v(" "),t("p",[t("strong",[e._v("GetRootUIComponent")]),e._v(": Shotcut and cache for GetOwner->GetRootComponent->ConvertTo UIItem")])])}],o=n(0),i=Object(o.a)({},(function(){this._self._c;return this._m(0)}),a,!1,null,null,null);t.default=i.exports}}]);