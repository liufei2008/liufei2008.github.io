(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{194:function(e,t,a){e.exports=a.p+"assets/img/1.1.acad1804.png"},195:function(e,t,a){e.exports=a.p+"assets/img/1.2.971792ed.png"},196:function(e,t,a){e.exports=a.p+"assets/img/1.3.8725b10c.png"},197:function(e,t,a){e.exports=a.p+"assets/img/1.4.4da1d8e3.png"},198:function(e,t,a){e.exports=a.p+"assets/img/2.1.578c342e.png"},199:function(e,t,a){e.exports=a.p+"assets/img/2.2.f70b98cb.png"},200:function(e,t,a){e.exports=a.p+"assets/img/2.3.f83e5d89.png"},201:function(e,t,a){e.exports=a.p+"assets/img/2.4.232e7dcc.png"},202:function(e,t,a){e.exports=a.p+"assets/img/3.1.c55d6265.png"},203:function(e,t,a){e.exports=a.p+"assets/img/3.2.4125ed2b.png"},204:function(e,t,a){e.exports=a.p+"assets/img/3.3.3268c373.png"},205:function(e,t,a){e.exports=a.p+"assets/img/3.4.33721657.png"},206:function(e,t,a){e.exports=a.p+"assets/img/3.5.27c6ea9e.png"},207:function(e,t,a){e.exports=a.p+"assets/img/3.6.2c1f6a02.png"},208:function(e,t,a){e.exports=a.p+"assets/img/3.7.6610e141.png"},209:function(e,t,a){e.exports=a.p+"assets/img/3.8.ce9b18a9.png"},569:function(e,t,a){"use strict";a.r(t);var s=[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"use-custom-material-for-ui-elements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use-custom-material-for-ui-elements"}},[e._v("#")]),e._v(" Use custom material for UI elements")]),e._v(" "),t("p",[e._v("LGUI can use custom material to change the look of our UI elements."),t("br"),e._v("\nNote You should use "),t("strong",[e._v("Surface")]),e._v(" material domain in LGUI's material, because LGUI is 3d UI, it still need 3d information.")]),e._v(" "),t("h4",{attrs:{id:"examples-1-use-a-emissive-material-to-make-our-text-glow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples-1-use-a-emissive-material-to-make-our-text-glow"}},[e._v("#")]),e._v(" Examples 1, use a emissive material to make our text glow.")]),e._v(" "),t("p",[e._v("Note: Glow is a world space post process effect, so only "),t("strong",[e._v("World Space UE Renderer")]),e._v(" can do this, and post process setting must enable glow.")]),e._v(" "),t("ol",[t("li",[e._v("First of all, copy material "),t("em",[e._v("LGUI_Base")]),e._v(" from "),t("em",[e._v("LGUI Content/ Material")]),e._v(" folder (You may need to check "),t("em",[e._v("Show Plugin Content")]),e._v(" if it is not visible), and paste it to your project content directory.")]),e._v(" "),t("li",[e._v("Add some nodes to the material like the image below:"),t("br"),e._v(" "),t("img",{attrs:{src:a(194),alt:""}})]),e._v(" "),t("li",[e._v('Since UIText use SDF as default, so we need to check on "Is SDF Font" Switch Param:'),t("br"),e._v(" "),t("img",{attrs:{src:a(195),alt:""}})]),e._v(" "),t("li",[e._v("Select a UIText, and drag the material you just modified to "),t("em",[e._v("Custom Material")]),e._v(" slot:"),t("br"),e._v(" "),t("img",{attrs:{src:a(196),alt:""}}),e._v("\nNow the text should look glow:\n"),t("img",{attrs:{src:a(197),alt:""}})])]),e._v(" "),t("h4",{attrs:{id:"example-2-use-texture-to-maskout-our-sprite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-2-use-texture-to-maskout-our-sprite"}},[e._v("#")]),e._v(" Example 2, use texture to maskout our sprite.")]),e._v(" "),t("p",[e._v("Note: UISprite render a UISpriteData. UISpriteData contains the info of a small area from a packed atlas texture.")]),e._v(" "),t("ol",[t("li",[e._v("First of all, copy material "),t("em",[e._v("LGUI_Base")]),e._v(" from "),t("em",[e._v("LGUI Content/ Material")]),e._v(" folder (You may need to check "),t("em",[e._v("Show Plugin Content")]),e._v(" if it is not visible). And paste it to your project content directory.")]),e._v(" "),t("li",[e._v("Add some nodes to the material like the image below (note the mask texture's "),t("em",[e._v("TexCoord[1]")]),e._v(", and don't forget to select a mask texture for "),t("em",[e._v("Texture Sample")]),e._v(" node):"),t("br"),e._v(" "),t("img",{attrs:{src:a(198),alt:""}})]),e._v(" "),t("li",[e._v("Select a UISprite, and drag the material you just modifyed to "),t("em",[e._v("Custom Material")]),e._v(" slot:"),t("br"),e._v(" "),t("img",{attrs:{src:a(199),alt:""}})]),e._v(" "),t("li",[e._v("Now the UISprite look not right, because we have not tell LGUI to setup the data for "),t("em",[e._v("TexCoord[1]")]),e._v(". Select LGUICanvas component from WorldSpaceUIRoot actor, in the "),t("em",[e._v("Additional Shader Channels")]),e._v(" property, check on "),t("em",[e._v("UV1")]),e._v("."),t("br"),e._v(" "),t("img",{attrs:{src:a(200),alt:""}}),e._v("\nNow the result should be good:"),t("br"),e._v(" "),t("img",{attrs:{src:a(201),alt:""}}),e._v("\nWhy use "),t("em",[e._v("TexCoord[1]")]),e._v("? Because LGUI provide a common rect 0-1 range for UISprite in "),t("em",[e._v("TexCoord[1]")]),e._v(". "),t("em",[e._v("TexCoord[0]")]),e._v(" is for sprite atlas, which is not 0-1 range.")])]),e._v(" "),t("h4",{attrs:{id:"example-3-use-lguicanvas-builtin-rectclip-and-textureclip-in-our-custom-material"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-3-use-lguicanvas-builtin-rectclip-and-textureclip-in-our-custom-material"}},[e._v("#")]),e._v(" Example 3, use LGUICanvas builtin RectClip and TextureClip in our custom material.")]),e._v(" "),t("p",[e._v("LGUI provide preset material functions "),t("strong",[e._v("LGUIRectClip")]),e._v(" and "),t("strong",[e._v("LGUITextureClip")]),e._v(' for LGUICanvas builtin RectClip and TextureClip, you can find it in "LGUI Content" folder:'),t("br"),e._v(" "),t("img",{attrs:{src:a(202),alt:""}}),e._v("\nYou can use it in any material, the key is use the material function's result as your Opacity input of material. Let's start to do it.")]),e._v(" "),t("p",[e._v("First create a "),t("em",[e._v("World Space UI - UE Renderer")]),e._v(', delete default "Frame" and "Info" node, and create a UISprite actor with name "ClipSprite", change size to 300x300:'),t("br"),e._v(" "),t("img",{attrs:{src:a(203),alt:""}})]),e._v(" "),t("p",[e._v("Then create our own material like the image beblow:"),t("br"),e._v(" "),t("img",{attrs:{src:a(204),alt:""}})]),e._v(" "),t("p",[e._v("Drag "),t("em",[e._v("LGUIRectClip")]),e._v(" node to the material and link it:"),t("br"),e._v(" "),t("img",{attrs:{src:a(205),alt:""}})]),e._v(" "),t("p",[e._v("Select LGUICanvas component from WorldSpaceUIRoot actor, change "),t("em",[e._v("Clip Type")]),e._v(" to "),t("em",[e._v("Rect")]),e._v(":"),t("br"),e._v(" "),t("img",{attrs:{src:a(206),alt:""}})]),e._v(" "),t("p",[e._v('Drag the material to "ClipSprite":'),t("br"),e._v(" "),t("img",{attrs:{src:a(207),alt:""}})]),e._v(" "),t("p",[e._v("Now drag the UISprite actor to the edge of WorldSpaceUIRoot, see it is clipped:\n"),t("img",{attrs:{src:a(208),alt:""}}),e._v("\ntexture-clip is the same thing, just repace the "),t("em",[e._v("LGUIRectClip")]),e._v(" with node "),t("em",[e._v("LGUITextureClip")]),e._v(":\n"),t("img",{attrs:{src:a(209),alt:""}})])])}],o=a(0),r=Object(o.a)({},(function(){this._self._c;return this._m(0)}),s,!1,null,null,null);t.default=r.exports}}]);