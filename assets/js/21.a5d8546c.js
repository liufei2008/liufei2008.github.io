(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{523:function(t,e,s){t.exports=s.p+"assets/img/step1.8bcae249.png"},524:function(t,e,s){t.exports=s.p+"assets/img/step2.2cf507bc.png"},525:function(t,e,s){t.exports=s.p+"assets/img/step3.af19800f.png"},526:function(t,e,s){t.exports=s.p+"assets/img/step4.ae615d8a.png"},527:function(t,e,s){t.exports=s.p+"assets/img/step5.2c6ad311.png"},528:function(t,e,s){t.exports=s.p+"assets/img/step6.a2f2b5e3.png"},529:function(t,e,s){t.exports=s.p+"assets/img/step7.8adc0126.png"},530:function(t,e,s){t.exports=s.p+"assets/img/step8.e4c5f68d.png"},620:function(t,e,s){"use strict";s.r(e);var a=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"创建自定义的补间动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义的补间动画"}},[t._v("#")]),t._v(" 创建自定义的补间动画")]),t._v(" "),e("p",[t._v('LTween 提供了一些通用的动画方法: "Float To", "Int To", "Vector2 To", "Vector3 To", "Vector4 To", "Color To", "LinearColor To", "Quaternion To", "Rotator To". 有了这些方法, 你甚至可以为UMG制作补间动画.')]),t._v(" "),e("p",[t._v('我们以 "Rotator To" 为例, 以此来旋转一个立方体网格物体.')]),t._v(" "),e("h2",{attrs:{id:"设置场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置场景"}},[t._v("#")]),t._v(" 设置场景")]),t._v(" "),e("p",[t._v('创建个新的场景, 放入一个立方体, 把 "Mobility" 设为 "Movable", 把位置设为 (0, 0, 80):\n'),e("img",{attrs:{src:s(523),alt:""}})]),t._v(" "),e("p",[t._v('创建个 ActorComponent 蓝图, 命名为 "TweenAnimation":\n'),e("img",{attrs:{src:s(524),alt:""}})]),t._v(" "),e("p",[t._v('把 "TweenAnimation" 组件拖拽到立方体上作为其组件:\n'),e("img",{attrs:{src:s(525),alt:""}})]),t._v(" "),e("p",[t._v('从 "Event Begin Play" 拉线出来连到 "Rotator To" 节点:\n'),e("img",{attrs:{src:s(526),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"设置-setter-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置-setter-参数"}},[t._v("#")]),t._v(' 设置 "Setter" 参数')]),t._v(" "),e("p",[e("strong",[t._v('"Setter" 是 LTween 的 delegagte(委托), LTween会计算从 "Start Value" 到 "End Value" 的插值, 然后通过 "Setter" 把计算出来的结果传递给用户.')])]),t._v(" "),e("p",[t._v('从 "Setter" 拉线然后选择 "Add Event"->"Add Custom Event", 然后一个新的事件就用创建出来，参数是 rotator:\n'),e("img",{attrs:{src:s(527),alt:""}})]),t._v(" "),e("p",[t._v("设置刚才创建的事件为下图这样:\n"),e("img",{attrs:{src:s(528),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"设置其他参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置其他参数"}},[t._v("#")]),t._v(" 设置其他参数")]),t._v(" "),e("p",[t._v('从 "Root Component" 节点拉线出来选择 "Get Relative Rotation", 然后连接到 "Start Value":\n'),e("img",{attrs:{src:s(529),alt:""}})]),t._v(" "),e("p",[t._v('设置 "End Value" 值为 (0, 0, 90), "Duration" 值为 3.0, 设置 "Delay" 值为 1.0:\n'),e("img",{attrs:{src:s(530),alt:""}})]),t._v(" "),e("p",[t._v("现在设置完成了, 点击 Play 可以看到刚才设置的动画.")])])}],n=s(0),r=Object(n.a)({},(function(){this._self._c;return this._m(0)}),a,!1,null,null,null);e.default=r.exports}}]);