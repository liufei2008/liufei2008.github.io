(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{602:function(e,r,a){"use strict";a.r(r);var t=a(0),n=Object(t.a)({},(function(){this._self._c;return this._m(0)}),[function(){var e=this,r=e._self._c;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"lgui-render-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#lgui-render-flow"}},[e._v("#")]),e._v(" LGUI render flow")]),e._v(" "),r("h2",{attrs:{id:"prepare-render-resource-game-thread"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prepare-render-resource-game-thread"}},[e._v("#")]),e._v(" Prepare render resource (game thread)")]),e._v(" "),r("p",[e._v("LGUIManagerActor is responsible for updating all LGUICanvas -> LGUICanvas to update all UIItem and UIBaseRenderable (renderable objects) -> UIBaseRenderable to create and update UIGeometry, UIPostProcessRenderProxy -> LGUICanvas to collect and create grids, textures, materials, merge drawcall -> LGUICanvas to create drawcall Rendering resources.")]),e._v(" "),r("h2",{attrs:{id:"rendering-rendering-thread"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rendering-rendering-thread"}},[e._v("#")]),e._v(" Rendering (rendering thread)")]),e._v(" "),r("h3",{attrs:{id:"screen-space-ui-and-world-space-ui-rendered-by-lguirenderer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#screen-space-ui-and-world-space-ui-rendered-by-lguirenderer"}},[e._v("#")]),e._v(" Screen space UI and world space UI rendered by LGUIRenderer")]),e._v(" "),r("p",[e._v("The LGUIRenderer renderer is extended from the ViewExtension of UE. It performs all rendering in the function XXX_RenderThread of the rendering thread and directly renders to the RenderTarget of the screen. It does not support UE's own post-production, lighting, anti-aliasing, etc."),r("br"),e._v("\nThe rendering process is similar to Slate. Set ViewUniformBuffer -> Specify RenderTarget -> Initialize GraphicsPipelineState -> foreach Drawcall -> Shader/Material -> SetGraphicsPipelineState -> DrawIndexedPrimitive -> "),r("em",[e._v("foreach Drawcall")])]),e._v(" "),r("h3",{attrs:{id:"world-space-ui"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#world-space-ui"}},[e._v("#")]),e._v(" World Space UI")]),e._v(" "),r("p",[e._v("The world space UI uses UE's own rendering pipeline, and uses translucent materials by default to support UE's own post-production, lighting, anti-aliasing, etc.")])])}],!1,null,null,null);r.default=n.exports}}]);