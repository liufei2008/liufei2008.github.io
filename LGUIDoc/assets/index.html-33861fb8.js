import{_ as t,o as e,c as o,a as s}from"./app-c7c268cc.js";const r="/LGUIDoc/assets/1-9cc130cf.png",n="/LGUIDoc/assets/2-ed7e25a3.png",a="/LGUIDoc/assets/3-0dbdd104.png",i={},l=s('<h1 id="project-3d-world-position-to-lgui-s-screen-2d-position" tabindex="-1"><a class="header-anchor" href="#project-3d-world-position-to-lgui-s-screen-2d-position" aria-hidden="true">#</a> Project 3d world position to LGUI&#39;s screen 2d position</h1><p>This is useful when we want to create a floating health bar on our character.</p><p>The main point is to use two nodes: One is <strong>Project World to Screen</strong>, which is UnrealEngine&#39;s default node:<br><img src="'+r+'" alt=""> Another is <strong>Convert Position from Viewport to LGUICanvas</strong>, which is provided by LGUICanvasScaler:<br><img src="'+n+'" alt=""></p><table><thead><tr><th style="text-align:left;">Property:</th><th style="text-align:left;">Function:</th></tr></thead><tbody><tr><td style="text-align:left;">Target</td><td style="text-align:left;">A reference to LGUICanvasScaler object.</td></tr><tr><td style="text-align:left;">Position</td><td style="text-align:left;">Input position, which is output from <strong>Project World to Screen</strong> node.</td></tr><tr><td style="text-align:left;">Return Value</td><td style="text-align:left;">Result LGUI&#39;s screen space position. Note left bottom is zero position, so for UIItem who need to use the result value, should set <em>Anchors</em> to <em>Left Bottom</em>, and the parent of UIItem should set to full screen size.</td></tr></tbody></table><p>We can link these nodes like the screen shot below:<br><img src="'+a+'" alt=""><br><em>Healthbar</em> is a UIBaseActor represent for a healthbar, <em>Root</em> is the ScreenSpaceUIRoot actor which hold the LGUICanvasScaler component.</p>',5),c=[l];function d(h,p){return e(),o("div",null,c)}const m=t(i,[["render",d],["__file","index.html.vue"]]);export{m as default};
