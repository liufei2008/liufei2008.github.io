import{_ as e,c as a,o as t,a as r}from"./app-CVfq4vAg.js";const l="/LGUIDoc/assets/TurnOnStat-hrbG6ms-.png",o="/LGUIDoc/assets/StatItems-C-AhNJv3.png",s={},i=r('<h1 id="lgui-stat" tabindex="-1"><a class="header-anchor" href="#lgui-stat"><span>LGUI Stat</span></a></h1><p>LGUI provide some stat info for quike performance check: <em>Stat-&gt;Advanced-&gt;LGUI</em> and <em>Stat-&gt;Advanced-&gt;LTween</em>:<br><img src="'+l+'" alt=""><br> When it is on, the stat info will show:<br><img src="'+o+'" alt=""><br> There are 4 main items that you should check first, they contains almost all LGUI&#39;s cost: <strong>Hud RHIRender</strong>ï¼Œ <strong>Canvas Update</strong>, <strong>EventSystem</strong>, <strong>UpdateLayoutInterface</strong>.</p><ul><li><h2 id="hud-rhirender" tabindex="-1"><a class="header-anchor" href="#hud-rhirender"><span>Hud RHIRender</span></a></h2></li></ul><p>All cost of LGUI Renderer in render thread, contains render mode of ScreenSpaceOverlay and WorldSpace-LGUIRenderer. Not contains WorldSpace-UERenderer, because in WorldSpace-UERenderer mode, LGUI just generate render data (mesh, material) and leave them for UE to render it as normal scene object.</p><h3 id="postprocess-backgroundblur" tabindex="-1"><a class="header-anchor" href="#postprocess-backgroundblur"><span>PostProcess_BackgroundBlur</span></a></h3><p>Render cost of UIBackgroundBlur component.</p><h3 id="postprocess-backgroundpixelate" tabindex="-1"><a class="header-anchor" href="#postprocess-backgroundpixelate"><span>PostProcess_BackgroundPixelate</span></a></h3><p>Render cost of UIBackgroundPixelate component.</p><h3 id="lguimesh-createsceneproxy" tabindex="-1"><a class="header-anchor" href="#lguimesh-createsceneproxy"><span>LGUIMesh CreateSceneProxy</span></a></h3><p>This happens when LGUIMeshComponent is creating SceneProxy.</p><h3 id="lguimesh-createmeshsection" tabindex="-1"><a class="header-anchor" href="#lguimesh-createmeshsection"><span>LGUIMesh CreateMeshSection</span></a></h3><p>This happens when LGUIMeshComponent&#39;s SceneProxy is creating mesh section, means LGUI is rebuilding drawcall.</p><ul><li><h2 id="canvasupdate" tabindex="-1"><a class="header-anchor" href="#canvasupdate"><span>CanvasUpdate</span></a></h2></li></ul><p>All cost of LGUI Renderer in game thread, no matter what render mode it is. In game thread, LGUI generate mesh &amp; texture atlas &amp; material &amp; other render resource.</p><h3 id="canvas-batachdrawcall" tabindex="-1"><a class="header-anchor" href="#canvas-batachdrawcall"><span>Canvas BatachDrawcall</span></a></h3><p>LGUICanvas do sort depth, calculate overlap, and batch drawcall.</p><h3 id="uigeometry-transformvertices" tabindex="-1"><a class="header-anchor" href="#uigeometry-transformvertices"><span>UIGeometry TransformVertices</span></a></h3><p>LGUI will collect all created geometry, and transform it&#39;s vertices &amp; normals &amp; tangents from UI element&#39;s local space to LGUICanvas&#39;s local space.</p><h3 id="uibatchgeometryrenderable-geometrymodifier" tabindex="-1"><a class="header-anchor" href="#uibatchgeometryrenderable-geometrymodifier"><span>UIBatchGeometryRenderable GeometryModifier</span></a></h3><p>GeometryModifier (UIEffectXXX, include TextAnimation) update render geometry in game thread.</p><h3 id="uipostprocessrenderable-updategeometry" tabindex="-1"><a class="header-anchor" href="#uipostprocessrenderable-updategeometry"><span>UIPostProcessRenderable UpdateGeometry</span></a></h3><p>UIPostProcessRenderable (UIBackgroundBlur &amp; UIBackgroundPixelate) update render geometry in game thread.</p><ul><li><h2 id="updatelayoutinterface" tabindex="-1"><a class="header-anchor" href="#updatelayoutinterface"><span>UpdateLayoutInterface</span></a></h2></li></ul><p>Update all layout object which inherit interface ILGUILayoutInterface, such as UIHorizontalLayout, UIVerticalLayout, UIText...</p><h3 id="uilayout-horizontalrebuildlayout" tabindex="-1"><a class="header-anchor" href="#uilayout-horizontalrebuildlayout"><span>UILayout HorizontalRebuildLayout</span></a></h3><p>UIHorizontalLayout calculation.</p><h3 id="uilayout-verticalrebuildlayout" tabindex="-1"><a class="header-anchor" href="#uilayout-verticalrebuildlayout"><span>UILayout VerticalRebuildLayout</span></a></h3><p>UIVerticalLayout calculation.</p><h3 id="uilayout-gridrebuildlayout" tabindex="-1"><a class="header-anchor" href="#uilayout-gridrebuildlayout"><span>UILayout GridRebuildLayout</span></a></h3><p>UIGridLayout calculation.</p><ul><li><h2 id="eventsystem" tabindex="-1"><a class="header-anchor" href="#eventsystem"><span>EventSystem</span></a></h2></li></ul><p>All cost of LGUI&#39;s EventSystem in game thread. LGUI will use ray and do raycast, execute event on hit object.</p><ul><li><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others"><span>Others</span></a></h2></li></ul><h3 id="lguilifecyclebehaviour-start" tabindex="-1"><a class="header-anchor" href="#lguilifecyclebehaviour-start"><span>LGUILifeCycleBehaviour Start</span></a></h3><h3 id="lguilifecyclebehaviour-update" tabindex="-1"><a class="header-anchor" href="#lguilifecyclebehaviour-update"><span>LGUILifeCycleBehaviour Update</span></a></h3><p>All cost of LGUILifeCycleBehaviour&#39;s Update function in game thread.</p>',36),n=[i];function c(d,h){return t(),a("div",null,n)}const p=e(s,[["render",c],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/Performance/","title":"LGUI Stat","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"PostProcess_BackgroundBlur","slug":"postprocess-backgroundblur","link":"#postprocess-backgroundblur","children":[]},{"level":3,"title":"PostProcess_BackgroundPixelate","slug":"postprocess-backgroundpixelate","link":"#postprocess-backgroundpixelate","children":[]},{"level":3,"title":"LGUIMesh CreateSceneProxy","slug":"lguimesh-createsceneproxy","link":"#lguimesh-createsceneproxy","children":[]},{"level":3,"title":"LGUIMesh CreateMeshSection","slug":"lguimesh-createmeshsection","link":"#lguimesh-createmeshsection","children":[]},{"level":3,"title":"Canvas BatachDrawcall","slug":"canvas-batachdrawcall","link":"#canvas-batachdrawcall","children":[]},{"level":3,"title":"UIGeometry TransformVertices","slug":"uigeometry-transformvertices","link":"#uigeometry-transformvertices","children":[]},{"level":3,"title":"UIBatchGeometryRenderable GeometryModifier","slug":"uibatchgeometryrenderable-geometrymodifier","link":"#uibatchgeometryrenderable-geometrymodifier","children":[]},{"level":3,"title":"UIPostProcessRenderable UpdateGeometry","slug":"uipostprocessrenderable-updategeometry","link":"#uipostprocessrenderable-updategeometry","children":[]},{"level":3,"title":"UILayout HorizontalRebuildLayout","slug":"uilayout-horizontalrebuildlayout","link":"#uilayout-horizontalrebuildlayout","children":[]},{"level":3,"title":"UILayout VerticalRebuildLayout","slug":"uilayout-verticalrebuildlayout","link":"#uilayout-verticalrebuildlayout","children":[]},{"level":3,"title":"UILayout GridRebuildLayout","slug":"uilayout-gridrebuildlayout","link":"#uilayout-gridrebuildlayout","children":[]},{"level":3,"title":"LGUILifeCycleBehaviour Start","slug":"lguilifecyclebehaviour-start","link":"#lguilifecyclebehaviour-start","children":[]},{"level":3,"title":"LGUILifeCycleBehaviour Update","slug":"lguilifecyclebehaviour-update","link":"#lguilifecyclebehaviour-update","children":[]}],"git":{"updatedTime":1685406463000,"contributors":[{"name":"lf2007hf","email":"707908214@qq.com","commits":1}]},"filePathRelative":"Performance/index.md"}');export{p as comp,m as data};
