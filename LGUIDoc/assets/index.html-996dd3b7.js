import{_ as n,r as s,o as i,c as r,b as e,d as t,e as l,a as o}from"./app-6406b13f.js";const c="/LGUIDoc/assets/step1-3cb62077.png",p="/LGUIDoc/assets/step2-5e06a3e9.png",u="/LGUIDoc/assets/step3-0633719d.png",d="/LGUIDoc/assets/step4-3363ca28.png",h="/LGUIDoc/assets/step5-993186c7.png",m="/LGUIDoc/assets/step6-164585c7.png",g="/LGUIDoc/assets/step7-8458110c.png",w="/LGUIDoc/assets/step7.1-97c33a5f.png",f="/LGUIDoc/assets/step8-139e5c0a.png",q="/LGUIDoc/assets/step9-d3b8d20c.png",_="/LGUIDoc/assets/step10-61bf1af6.png",b="/LGUIDoc/assets/step11-15706165.png",v="/LGUIDoc/assets/step12-d8f8f513.png",y="/LGUIDoc/assets/step13-1f0e486c.png",L="/LGUIDoc/assets/step14-0db677ee.png",T="/LGUIDoc/assets/step15-85ccaa61.png",D="/LGUIDoc/assets/step16-a421aa76.png",C="/LGUIDoc/assets/step17-2a68c2a2.png",x="/LGUIDoc/assets/step18-4d17ab46.png",I={},U=o('<h1 id="use-ltween-for-scenecomponent" tabindex="-1"><a class="header-anchor" href="#use-ltween-for-scenecomponent" aria-hidden="true">#</a> Use LTween for SceneComponent</h1><h2 id="move-rotate-scale-animation" tabindex="-1"><a class="header-anchor" href="#move-rotate-scale-animation" aria-hidden="true">#</a> Move/Rotate/Scale Animation</h2><p>Create a new default level, drag a cube to viewport, set mobility to movable, set location to (0, 0, 80):<br><img src="'+c+'" alt=""></p><p>Create a ActorComponent blueprint, name it &quot;TweenAnimation&quot;:<br><img src="'+p+'" alt=""></p><p>Edit the TweenAnimation blueprint like this, this will move the cube&#39;s relative location.x to the &quot;EndValue&quot;:<br><img src="'+u+'" alt=""></p><p>Drag the TweenAnimation blueprint to the cube and hit play, the cube will move to (500, 0, 80) in 0.5 seconds:<br><img src="'+d+'" alt=""></p><p>The animation looks very simple, lets make it a little interesting. Double click to Open TweenAnimation blueprint, change &quot;Duration&quot; to 3.0. Add a &quot;Local Rotator To&quot; node like this:<br><img src="'+h+'" alt=""></p><p>Hit play, the cube will move and rotate in viewport:<br><img src="'+m+'" alt=""></p><p>Add a &quot;Local Scale To&quot; node like this, then hit play and see the animation:<br><img src="'+g+'" alt=""></p><p>You can find other tween functions in &quot;LTween&quot; category:<br><img src="'+w+'" alt=""></p><h2 id="delay-and-ease" tabindex="-1"><a class="header-anchor" href="#delay-and-ease" aria-hidden="true">#</a> Delay and Ease</h2><p>Delete &quot;Local Position X To&quot; and &quot;Local Scale To&quot; node, keep &quot;Local Rotator To&quot; node, and set &quot;Delay&quot; to 1.0, hit play (the animation will start after 1 seconds when play):<br><img src="'+f+'" alt=""></p>',12),k={href:"https://www.inkfood.com/tween-3d-objects/",target:"_blank",rel:"noopener noreferrer"},G=e("br",null,null,-1),E=e("img",{src:"https://www.inkfood.com/wordprez/wp-content/uploads/easingFunctions.png",alt:""},null,-1),A=o('<h3 id="curvefloat" tabindex="-1"><a class="header-anchor" href="#curvefloat" aria-hidden="true">#</a> CurveFloat</h3><p>There is a special ease type called &quot;CurveFloat&quot;:<br><img src="'+q+'" alt=""></p><p>This can let us use a CurveFloat to control our animation.<br> The following steps will show you how to do it: Right click on empty area of Content, choose &quot;Miscellaneous&quot;-&gt;&quot;Curve&quot;:<br><img src="'+_+'" alt=""></p><p>Select &quot;CurveFloat&quot; in the popup window:<br><img src="'+b+'" alt=""></p><p>Name created asset to &quot;AnimationCurve&quot;:<br><img src="'+v+'" alt=""></p><p>LTween will use horizontal range from 0 to 1 as start and end time, keep that in mind and make the curve to any type you want:<br><img src="'+y+'" alt=""></p><p>Open &quot;TweenAnimation&quot; blueprint, drag out &quot;Return Value&quot; of &quot;Local Rotator To&quot; node, and add a new node &quot;Set Curve Float&quot;, and choose &quot;AnimationCurve&quot; in &quot;New Curve Float&quot;, this will make the CurveFloat work:<br><img src="'+L+'" alt=""></p><h2 id="loop" tabindex="-1"><a class="header-anchor" href="#loop" aria-hidden="true">#</a> Loop</h2><p>Loop is one of the most important thing of a tween animation.<br> After the &quot;Set Curve Float&quot; node, Drag out &quot;Return Value&quot; and add a new node &quot;Set Loop&quot;:<br><img src="'+T+'" alt=""></p><p>Click &quot;New Loop Type&quot; and you will find 4 options:</p><ul><li><strong>Once</strong> No loop</li><li><strong>Restart</strong> Each loop cycle restarts from beginning</li><li><strong>Yoyo</strong> The tween move forward and backward at alternate cycles</li><li><strong>Incremental</strong> Continuously increments the tween at the end of each loop cycle (A to B, B to B+(A-B), and so on)<br><img src="'+D+'" alt=""></li></ul><p>Don&#39;t forget to set &quot;New Loop Count&quot;, 0 or 1 means no loop, -1 means infinite loop.</p><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>Event function is also a can&#39;t-missing feature in tween animation. LTween provide these events:</p><ul><li><strong>OnStart</strong> Execute when animation start, if the tween have delay, then execute after delay</li><li><strong>OnUpdate</strong> Execute every frame if is tweening</li><li><strong>OnComplete</strong> Execute when animation complete, if the tween have loop, then execute after all loop</li><li><strong>OnCycleStart</strong> Exeucte every cycle start when use loop</li><li><strong>OnCycleComplete</strong> Exeucte every cycle complete when use loop<br> Setup event function is easy. eg OnUpdate, drag out the &quot;Return Value&quot; and add new node &quot;On Update&quot;, drag out &quot;New Update&quot; and add a custom event, the event will execute every frame after animation start:<br><img src="'+C+'" alt=""></li></ul><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><ul><li><strong>Pause/Resume</strong> Pause/Resume this animation</li><li><strong>Restart</strong> Restart animation</li><li><strong>Goto</strong> Send the tween to the given position in time</li><li><strong>Kill/KillIfIsTweening</strong> Kill the tween if the animation already start</li><li><strong>ForceComplete</strong> Force complete this animation at this frame, call OnComplete</li></ul><h2 id="use-ltween-for-material" tabindex="-1"><a class="header-anchor" href="#use-ltween-for-material" aria-hidden="true">#</a> Use LTween for Material</h2><p>LTween provide &quot;Material Vector Parameter To&quot; and &quot;Material Scalar Parameter To&quot; nodes for &quot;Material Instance Dynamic&quot; objects:<br><img src="'+x+'" alt=""></p>',19);function S(R,F){const a=s("ExternalLinkIcon");return i(),r("div",null,[U,e("p",null,[t('LTween provides severial ease types, click "Ease" and select the type you want. '),e("a",k,[t("This site"),l(a)]),t(" could be a good reference about ease functions (image is also from site https://www.inkfood.com/tween-3d-objects/):"),G,E]),A])}const N=n(I,[["render",S],["__file","index.html.vue"]]);export{N as default};
