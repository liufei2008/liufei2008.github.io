import{_ as e,c as t,o as a,a as o}from"./app-CVfq4vAg.js";const r="/LGUIDoc/assets/1-DRnaRJdx.png",s="/LGUIDoc/assets/note1-CZaLCFsc.png",n="/LGUIDoc/assets/note2-DKabIK4p.png",i="/LGUIDoc/assets/note3-D7lLYR0I.png",c={},l=o('<h1 id="prefabeditor" tabindex="-1"><a class="header-anchor" href="#prefabeditor"><span>PrefabEditor</span></a></h1><p>When double click a LGUIPrefab, a PrefabEditor window will be opened, it is the good place to edit prefab:<br><img src="'+r+'" alt=""></p><p><strong>[temporary_RootAgent]</strong> (or <strong>[RootAgent]</strong> in old version) is automatically created actor, which is just an temporary UIContainer that hold a LGUICanvas component, so that UI elements will be visible under it.</p><p>If you want to use your own LGUICanvas, you should remove the LGUICanvas component on <strong>[temporary_RootAgent]</strong>.</p><h2 id="assign-actor-variable" tabindex="-1"><a class="header-anchor" href="#assign-actor-variable"><span>Assign actor variable</span></a></h2><p>Sometimes we want to assign an actor variable inside PrefabEditor, we actually can&#39;t use these quick methods to choose the desired actor (the three little icon buttons), because it can only choose actors inside current level:<br><img src="'+s+'" alt=""></p><p>But how can we do it? Well there is a workaround. Check on the little lock button in the Details panel:<br><img src="'+n+'" alt=""></p><p>Then drag your actor to the variable area:<br><img src="'+i+'" alt=""><br> That&#39;s it.</p>',8),d=[l];function h(p,b){return a(),t("div",null,d)}const g=e(c,[["render",h],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/PrefabWorkflow/PrefabEditor/","title":"PrefabEditor","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Assign actor variable","slug":"assign-actor-variable","link":"#assign-actor-variable","children":[]}],"git":{"updatedTime":1715129183000,"contributors":[{"name":"lf2007hf","email":"707908214@qq.com","commits":2}]},"filePathRelative":"PrefabWorkflow/PrefabEditor/index.md"}');export{g as comp,f as data};
