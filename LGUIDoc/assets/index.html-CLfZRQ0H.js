import{_ as t,c as e,o,a as r}from"./app-CGRYBoMb.js";const a="/LGUIDoc/assets/1-GcvRCPKI.png",s="/LGUIDoc/assets/2-C0qXP5qP.png",n="/LGUIDoc/assets/3-ktjeIhk0.png",l={},c=r('<h1 id="世界空间位置投射到lgui的屏幕空间位置" tabindex="-1"><a class="header-anchor" href="#世界空间位置投射到lgui的屏幕空间位置"><span>世界空间位置投射到LGUI的屏幕空间位置</span></a></h1><p>如果你要做个浮动的血条可能会用到这个知识点。</p><p>主要用到两个节点：一个是<strong>Project World to Screen</strong>，可以在引擎自带节点里找到： <img src="'+a+'" alt=""> 另一个是<strong>Convert Position from Viewport to LGUICanvas</strong>，这是LGUICanvasScaler类中提供的节点：<br><img src="'+s+'" alt=""></p><table><thead><tr><th style="text-align:left;">属性：</th><th style="text-align:left;">方法：</th></tr></thead><tbody><tr><td style="text-align:left;">Target</td><td style="text-align:left;">LGUICanvasScaler组件物体。</td></tr><tr><td style="text-align:left;">Position</td><td style="text-align:left;">输入位置，是从<strong>Project World to Screen</strong>节点输出的。</td></tr><tr><td style="text-align:left;">Return Value</td><td style="text-align:left;">代表LGUI的屏幕空间的位置。注意左下角是0位置，所以如果某个UI元素需要使用这个值，那么它需要把锚点设置到左下角，并且它的父物体只能是全屏尺寸。</td></tr></tbody></table><p>我们可以把这些节点连成下图的样子： <img src="'+n+'" alt=""><br><em>Healthbar</em>是个UIBaseActor物体，代表血条的根物体；<em>Root</em>是ScreenSpaceUIRoot的Actor，并且必须要有LGUICanvasScaler组件。</p>',5),i=[c];function d(m,g){return o(),e("div",null,i)}const p=t(l,[["render",d],["__file","index.html.vue"]]),_=JSON.parse('{"path":"/zh-cn/FAQ/ProjectWorldToScreen/","title":"世界空间位置投射到LGUI的屏幕空间位置","lang":"中文","frontmatter":{},"headers":[],"git":{"updatedTime":1702371828000,"contributors":[{"name":"lf2007hf","email":"707908214@qq.com","commits":1}]},"filePathRelative":"zh-cn/FAQ/ProjectWorldToScreen/index.md"}');export{p as comp,_ as data};
