import{_ as e,o as t,c as a,e as r}from"./app-8619d86d.js";const o="/LPrefabDoc/assets/1-91d7f8a6.png",s="/LPrefabDoc/assets/note1-78dad363.png",i="/LPrefabDoc/assets/note2-c0f78127.png",c="/LPrefabDoc/assets/note3-c59c2af0.png",n={},d=r('<h1 id="prefabeditor" tabindex="-1"><a class="header-anchor" href="#prefabeditor" aria-hidden="true">#</a> PrefabEditor</h1><p>When double click a Prefab, a PrefabEditor window will be opened, it is the good place to edit prefab:<br><img src="'+o+'" alt=""></p><p><strong>[temporary_RootAgent]</strong> is automatically created actor, which is just an temporary root node.</p><h2 id="assign-actor-variable" tabindex="-1"><a class="header-anchor" href="#assign-actor-variable" aria-hidden="true">#</a> Assign actor variable</h2><p>Sometimes we want to assign an actor variable inside PrefabEditor, we actually can&#39;t use these quick methods to choose the desired actor (the three little icon buttons), because it can only choose actors inside current level:<br><img src="'+s+'" alt=""></p><p>But how can we do it? Well there is a workaround.<br> Check on the little lock button in the Details panel:<br><img src="'+i+'" alt=""></p><p>Then drag your actor to the variable area:<br><img src="'+c+'" alt=""><br> That&#39;s it.</p>',7),l=[d];function h(p,b){return t(),a("div",null,l)}const f=e(n,[["render",h],["__file","index.html.vue"]]);export{f as default};
