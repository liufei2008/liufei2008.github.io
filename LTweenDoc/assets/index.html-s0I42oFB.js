import{_ as e,a as t,b as a,c as s,d as n}from"./step5-DKwJcSBA.js";import{_ as r,c as i,o as l,a as o}from"./app-_l_BygEn.js";const c={},p=o('<p>LTween提供了一些好用的函数：</p><p><strong>VirtualCall</strong>- 注册Start/Update/Complete事件，设置时长（duration），然后事件就会按照要求执行： <img src="'+e+'" alt=""></p><p><strong>DelayCall</strong>- 与引擎自带的“Delay”节点有相同的功能： <img src="'+t+`" alt=""> c++版本可能会更常用：</p><div class="language-c++ line-numbers-mode" data-highlighter="prismjs" data-ext="c++" data-title="c++"><pre><code><span class="line">ULTweenBPLibrary::DelayCall(World, 2.0f, [](){</span>
<span class="line">    ...(your function here)</span>
<span class="line">});</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>DelayFrameCall</strong>- 延迟特定帧数后执行事件： <img src="`+a+'" alt=""></p><p><strong>RegisterUpdateEvent | UnregisterUpdateEvent</strong>- 注册“Update”事件用以每帧都调用事件，直到取消注册： <img src="'+s+'" alt=""></p><p><strong>RepeatCall</strong>- 以给定的间隔重复执行函数： <img src="'+n+'" alt=""></p>',7),d=[p];function m(_,g){return l(),i("div",null,d)}const v=r(c,[["render",m],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/zh-cn/Functions/","title":"","lang":"中文","frontmatter":{},"headers":[],"git":{"updatedTime":1704029591000,"contributors":[{"name":"lf2007hf","email":"707908214@qq.com","commits":1}]},"filePathRelative":"zh-cn/Functions/index.md"}');export{v as comp,f as data};
