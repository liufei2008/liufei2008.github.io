import{_ as i,a as r,b as s,c as l,d as c,e as u,f as d,g as p,h,i as m,j as w,k as g,l as f,m as _,n as b,o as q,p as v,q as y,r as T}from"./step18-9b240f4d.js";import{_ as x,r as C,o as L,c as k,b as e,d as t,e as a,a as n}from"./app-581010d2.js";const E={},S=e("h1",{id:"ltween",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ltween","aria-hidden":"true"},"#"),t(" LTween")],-1),A=e("p",null,[e("strong",null,"NOTE!!!"),t(" LTween is part of LGUI plugin as an individual module, if you already have LGUI then no need to buy LTween!")],-1),R=e("p",null,"LTween (Lex-Tween) is a easy & fast & efficient tween animation library for UnrealEngine.",-1),F={href:"https://youtu.be/m0-aYP8zRSw?si=Nlnroc-a3TEiZiqT",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.bilibili.com/video/BV1Ey4y1Q7tM/?share_source=copy_web&vd_source=b22254760c9a0522c8caea62e5327c1d",target:"_blank",rel:"noopener noreferrer"},O=n('<hr><h1 id="use-ltween-for-scenecomponent" tabindex="-1"><a class="header-anchor" href="#use-ltween-for-scenecomponent" aria-hidden="true">#</a> Use LTween for SceneComponent</h1><h2 id="move-rotate-scale-animation" tabindex="-1"><a class="header-anchor" href="#move-rotate-scale-animation" aria-hidden="true">#</a> Move/Rotate/Scale Animation</h2><p>Create a new default level, drag a cube to viewport, set mobility to movable, set location to (0, 0, 80):<br><img src="'+i+'" alt=""></p><p>Create a ActorComponent blueprint, name it &quot;TweenAnimation&quot;:<br><img src="'+r+'" alt=""></p><p>Edit the TweenAnimation blueprint like this, this will move the cube&#39;s relative location.x to the &quot;EndValue&quot;:<br><img src="'+s+'" alt=""></p><p>Drag the TweenAnimation blueprint to the cube and hit play, the cube will move to (500, 0, 80) in 0.5 seconds:<br><img src="'+l+'" alt=""></p><p>The animation looks very simple, lets make it a little interesting. Double click to Open TweenAnimation blueprint, change &quot;Duration&quot; to 3.0. Add a &quot;Local Rotator To&quot; node like this:<br><img src="'+c+'" alt=""></p><p>Hit play, the cube will move and rotate in viewport:<br><img src="'+u+'" alt=""></p><p>Add a &quot;Local Scale To&quot; node like this, then hit play and see the animation:<br><img src="'+d+'" alt=""></p><p>You can find other tween functions in &quot;LTween&quot; category:<br><img src="'+p+'" alt=""></p><h2 id="delay-and-ease" tabindex="-1"><a class="header-anchor" href="#delay-and-ease" aria-hidden="true">#</a> Delay and Ease</h2><p>Delete &quot;Local Position X To&quot; and &quot;Local Scale To&quot; node, keep &quot;Local Rotator To&quot; node, and set &quot;Delay&quot; to 1.0, hit play (the animation will start after 1 seconds when play):<br><img src="'+h+'" alt=""></p>',13),I={href:"https://www.inkfood.com/tween-3d-objects/",target:"_blank",rel:"noopener noreferrer"},V=e("br",null,null,-1),B=e("img",{src:"https://www.inkfood.com/wordprez/wp-content/uploads/easingFunctions.png",alt:""},null,-1),D=n('<h3 id="curvefloat" tabindex="-1"><a class="header-anchor" href="#curvefloat" aria-hidden="true">#</a> CurveFloat</h3><p>There is a special ease type called &quot;CurveFloat&quot;:<br><img src="'+m+'" alt=""></p><p>This can let us use a CurveFloat to control our animation.</p><p>The following steps will show you how to do it:<br> Right click on empty area of Content, choose &quot;Miscellaneous&quot;-&gt;&quot;Curve&quot;:<br><img src="'+w+'" alt=""></p><p>Select &quot;CurveFloat&quot; in the popup window:<br><img src="'+g+'" alt=""></p><p>Name created asset to &quot;AnimationCurve&quot;:<br><img src="'+f+'" alt=""></p><p>LTween will use horizontal range from 0 to 1 as start and end time, keep that in mind and make the curve to any type you want:<br><img src="'+_+'" alt=""></p><p>Open &quot;TweenAnimation&quot; blueprint, drag out &quot;Return Value&quot; of &quot;Local Rotator To&quot; node, and add a new node &quot;Set Curve Float&quot;, and choose &quot;AnimationCurve&quot; in &quot;New Curve Float&quot;, this will make the CurveFloat work:<br><img src="'+b+'" alt=""></p><h2 id="loop" tabindex="-1"><a class="header-anchor" href="#loop" aria-hidden="true">#</a> Loop</h2><p>Loop is one of the most important thing of a tween animation.<br> After the &quot;Set Curve Float&quot; node, Drag out &quot;Return Value&quot; and add a new node &quot;Set Loop&quot;:<br><img src="'+q+'" alt=""></p><p>Click &quot;New Loop Type&quot; and you will find 4 options:</p><ul><li><strong>Once</strong>: No loop</li><li><strong>Restart</strong>: Each loop cycle restarts from beginning</li><li><strong>Yoyo</strong>: The tween move forward and backward at alternate cycles</li><li><strong>Incremental</strong>: Continuously increments the tween at the end of each loop cycle (A to B, B to B+(A-B), and so on)<br><img src="'+v+'" alt=""></li></ul><p>Don&#39;t forget to set &quot;New Loop Count&quot;, 0 or 1 means no loop, -1 means infinite loop.</p><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>Event function is also a can&#39;t-missing feature in tween animation. LTween provide these events:</p><ul><li><strong>OnStart</strong>: Execute when animation start, if the tween have delay, then execute after delay</li><li><strong>OnUpdate</strong>: Execute every frame if is tweening</li><li><strong>OnComplete</strong>: Execute when animation complete, if the tween have loop, then execute after all loop. If is infinite loop then not execute at all</li><li><strong>OnCycleStart</strong>: Exeucte every loop cycle start</li><li><strong>OnCycleComplete</strong>: Exeucte every loop cycle complete<br> Setup event function is easy. eg OnUpdate, drag out the &quot;Return Value&quot; and add new node &quot;On Update&quot;, drag out &quot;New Update&quot; and add a custom event, the event will execute every frame after animation start:<br><img src="'+y+'" alt=""></li></ul><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><ul><li><strong>Pause/Resume</strong>: Pause/Resume this animation</li><li><strong>Restart</strong>: Restart animation</li><li><strong>Goto</strong>: Send the tween to the given position in time</li><li><strong>Kill/KillIfIsTweening</strong>: Kill the tween if the animation already start</li><li><strong>ForceComplete</strong>: Force complete this animation at this frame, call OnComplete</li><li><strong>IsTweening</strong>: Is the tween animation processing?</li><li><strong>GetLoopCycleCount</strong>: Get the tween animation loop cycle count</li></ul><h2 id="use-ltween-for-material" tabindex="-1"><a class="header-anchor" href="#use-ltween-for-material" aria-hidden="true">#</a> Use LTween for Material</h2><p>LTween provide &quot;Material Vector Parameter To&quot; and &quot;Material Scalar Parameter To&quot; nodes for &quot;Material Instance Dynamic&quot; objects:<br><img src="'+T+'" alt=""></p>',20);function U(M,P){const o=C("ExternalLinkIcon");return L(),k("div",null,[S,A,R,e("p",null,[t("Here is a video tutorial: "),e("a",F,[t("Youtube"),a(o)]),t(),e("a",N,[t("Bilibili"),a(o)])]),O,e("p",null,[t('LTween provides severial ease types, click "Ease" and select the type you want. '),e("a",I,[t("This site"),a(o)]),t(" could be a good reference about ease functions (image is also from site https://www.inkfood.com/tween-3d-objects/):"),V,B]),D])}const Y=x(E,[["render",U],["__file","index.html.vue"]]);export{Y as default};
