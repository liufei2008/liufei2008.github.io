import{_ as t,a as o,b as e,c as a,d as r,e as i,f as n,g as s}from"./step8-6aea3456.js";import{_ as u,o as p,c,a as _}from"./app-d9d7bcbe.js";const d={},l=_('<h1 id="创建自定义的补间动画" tabindex="-1"><a class="header-anchor" href="#创建自定义的补间动画" aria-hidden="true">#</a> 创建自定义的补间动画</h1><p>LTween提供了通用的补间动画方法：&quot;Float To&quot;, &quot;Int To&quot;, &quot;Vector2 To&quot;, &quot;Vector3 To&quot;, &quot;Vector4 To&quot;, &quot;Color To&quot;, &quot;LinearColor To&quot;, &quot;Quaternion To&quot;, &quot;Rotator To&quot;。</p><p>我们来举个例子，用“Rotator To”来旋转个Cube。</p><h2 id="设置场景" tabindex="-1"><a class="header-anchor" href="#设置场景" aria-hidden="true">#</a> 设置场景</h2><p>创建个新的默认场景，创建个Cube，设为可移动，设置位置为（0, 0, 80）： <img src="'+t+'" alt=""></p><p>创建个ActorComponent蓝图，命名为“TweenAnimation”： <img src="'+o+'" alt=""></p><p>把“TweenAnimation”组件挂到Cube上： <img src="'+e+'" alt=""></p><p>从“Event Begin Play”拉出线然后添加“Rotator To”节点： <img src="'+a+'" alt=""></p><h2 id="设置-setter-参数" tabindex="-1"><a class="header-anchor" href="#设置-setter-参数" aria-hidden="true">#</a> 设置&quot;Setter&quot;参数</h2><p><strong>&quot;Setter&quot;是LTween的设置事件，LTween会从“Start Value”和“End Value”计算出插值，然后用“Setter”事件来调用和传递计算出来的值。</strong></p><p>从“Setter”拖拽出线然后创建自定义事件，那么蓝图会自动创建个带Rotator类型参数的事件： <img src="'+r+'" alt=""></p><p>按照下图设置事件： <img src="'+i+'" alt=""></p><h2 id="设置其他参数" tabindex="-1"><a class="header-anchor" href="#设置其他参数" aria-hidden="true">#</a> 设置其他参数</h2><p>从“Root Component”拖拽出线然后选择“Get Relative Rotation”，然后连到“Start Value”： <img src="'+n+'" alt=""></p><p>设置“End Value”为（0, 0, 90），“Duration”为3.0，设置“Delay”为1.0： <img src="'+s+'" alt=""></p><p>设置完成，可以运行查看动画效果了。</p>',16),h=[l];function m(q,T){return p(),c("div",null,h)}const x=u(d,[["render",m],["__file","index.html.vue"]]);export{x as default};
